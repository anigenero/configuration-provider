buildscript {

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
        classpath 'net.linguica.gradle:maven-settings-plugin:0.5'
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.3'
    }

}

plugins {
    id 'maven'
    id 'org.sonarqube' version '2.6.2'
}

apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'net.linguica.maven-settings'

sourceCompatibility = 1.10
targetCompatibility = 1.10

repositories {
    mavenCentral()
    mavenLocal()
}

group 'com.anigenero.cdi.config'
version '1.0-SNAPSHOT'

ext {

    cdiVersion = '2.0'
    jacksonVersion = '2.8.+'

    assertJVersion = '3.10.+'
    junitVersion = '5.2.+'
    mockitoVersion = '2.18.+'

}

dependencies {

    compileOnly group: 'javax.enterprise', name: 'cdi-api', version: '2.0'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.1'

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
    testCompile group: 'javax.enterprise', name: 'cdi-api', version: cdiVersion

    testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    testCompile group: 'org.assertj', name: 'assertj-core', version: assertJVersion

}

sonarqube {
    properties {
        property "sonar.scm.provider", "git"
        property "sonar.java.binaries", "build/classes"
    }
}

test {

    useJUnitPlatform()

    jacoco {
        excludes = ['**/Test*']
        append = false
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }

}

project.task(type: JacocoReport, "jacocoJupTestReport") {

    executionData test
    sourceSets(sourceSets.main)

    sourceDirectories = files(sourceSets.main.allSource.srcDirs)
    classDirectories = files(sourceSets.main.output)

    reports {
        xml.enabled false
        csv.enabled false
        html.destination "$buildDir/jacoco/html"
    }

}

project.task(type: JacocoCoverageVerification, "jacocoTestVerify") {

    executionData test

    sourceDirectories = files(sourceSets.main.allSource.srcDirs)
    classDirectories = files(sourceSets.main.output)

    violationRules {
        rule {
            limit {
                minimum = 0.9
            }
        }
    }

}

check.dependsOn jacocoJupTestReport

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name 'anigenero-repo'
            url 'http://repo.anigenero.com/repository/' + ((version.contains('SNAPSHOT')) ? 'maven-snapshots' : 'maven-releases')
        }
    }
}
