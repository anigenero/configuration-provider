buildscript {

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
        classpath 'net.linguica.gradle:maven-settings-plugin:0.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }

}

plugins {
    id 'maven'
}

apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'net.linguica.maven-settings'
apply plugin: 'com.jfrog.bintray'

sourceCompatibility = 1.10
targetCompatibility = 1.10

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

group 'com.anigenero.cdi'
version '1.0.0'

ext {
    junitVersion = '5.2.+'
}

dependencies {

    compileOnly group: 'javax.enterprise', name: 'cdi-api', version: '2.0'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.1'

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
    testCompile group: 'javax.enterprise', name: 'cdi-api', version: '2.0'

    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.18.+'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.10.+'

    testCompile group: 'com.anigenero.junit', name: 'junit-mockito-extension', version: '1.0.1'

}

test {

    useJUnitPlatform()

    jacoco {
        excludes = ['**/Test*']
        append = false
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }

}

project.task(type: JacocoReport, "jacocoJupTestReport") {

    executionData test
    sourceSets(sourceSets.main)

    sourceDirectories = files(sourceSets.main.allSource.srcDirs)
    classDirectories = files(sourceSets.main.output)

    reports {
        xml.enabled true
        csv.enabled false
        html.destination "$buildDir/jacoco/html"
    }

}

project.task(type: JacocoCoverageVerification, "jacocoTestVerify") {

    executionData test

    sourceDirectories = files(sourceSets.main.allSource.srcDirs)
    classDirectories = files(sourceSets.main.output)

    violationRules {
        rule {
            limit {
                minimum = 0.9
            }
        }
    }

}

check.dependsOn jacocoJupTestReport

bintray {
    user = System.getenv('BINTRAY_USERNAME')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = 'junit-mockito-extension'
        userOrg = System.getenv('BINTRAY_USERNAME')
        licenses = ['MIT']
        vcsUrl = 'https://github.com/bintray/gradle-bintray-plugin.git'
    }
}